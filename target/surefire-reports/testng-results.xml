<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-17T17:26:09 IST" name="Suite" finished-at="2024-12-17T17:34:02 IST" duration-ms="473771">
    <groups>
    </groups>
    <test started-at="2024-12-17T17:26:09 IST" name="Test" finished-at="2024-12-17T17:34:02 IST" duration-ms="473771">
      <class name="tests.TS_006_PurchaseTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_006_PurchaseTest@6fa51cd4]" started-at="2024-12-17T17:31:32 IST" name="openBrowser" finished-at="2024-12-17T17:31:54 IST" duration-ms="22367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="purchaseFunctionality()[pri:0, instance:tests.TS_006_PurchaseTest@6fa51cd4]" started-at="2024-12-17T17:31:54 IST" name="purchaseFunctionality" finished-at="2024-12-17T17:32:44 IST" duration-ms="49129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- purchaseFunctionality -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_006_PurchaseTest@6fa51cd4]" started-at="2024-12-17T17:32:44 IST" name="takeScreenshot" finished-at="2024-12-17T17:32:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=purchaseFunctionality status=SUCCESS method=TS_006_PurchaseTest.purchaseFunctionality()[pri:0, instance:tests.TS_006_PurchaseTest@6fa51cd4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_006_PurchaseTest -->
      <class name="tests.TS_002_LoginTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_002_LoginTest@353352b6]" started-at="2024-12-17T17:27:01 IST" name="openBrowser" finished-at="2024-12-17T17:27:28 IST" duration-ms="26722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="LoginToDemoBlaze()[pri:0, instance:tests.TS_002_LoginTest@353352b6]" started-at="2024-12-17T17:27:28 IST" name="LoginToDemoBlaze" finished-at="2024-12-17T17:27:35 IST" duration-ms="7140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginToDemoBlaze -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_002_LoginTest@353352b6]" started-at="2024-12-17T17:27:35 IST" name="takeScreenshot" finished-at="2024-12-17T17:27:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginToDemoBlaze status=SUCCESS method=TS_002_LoginTest.LoginToDemoBlaze()[pri:0, instance:tests.TS_002_LoginTest@353352b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_002_LoginTest -->
      <class name="tests.TS_007_LogoutTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_007_LogoutTest@2767e23c]" started-at="2024-12-17T17:32:44 IST" name="openBrowser" finished-at="2024-12-17T17:33:36 IST" duration-ms="52469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="validateLogoutFunctionality()[pri:0, instance:tests.TS_007_LogoutTest@2767e23c]" started-at="2024-12-17T17:33:36 IST" name="validateLogoutFunctionality" finished-at="2024-12-17T17:34:02 IST" duration-ms="26199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLogoutFunctionality -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_007_LogoutTest@2767e23c]" started-at="2024-12-17T17:34:02 IST" name="takeScreenshot" finished-at="2024-12-17T17:34:02 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLogoutFunctionality status=SUCCESS method=TS_007_LogoutTest.validateLogoutFunctionality()[pri:0, instance:tests.TS_007_LogoutTest@2767e23c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_007_LogoutTest -->
      <class name="tests.TS_004_ProductDetailsTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_004_ProductDetailsTest@57a78e3]" started-at="2024-12-17T17:28:35 IST" name="openBrowser" finished-at="2024-12-17T17:30:05 IST" duration-ms="90085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="checkProductDetails()[pri:0, instance:tests.TS_004_ProductDetailsTest@57a78e3]" started-at="2024-12-17T17:30:05 IST" name="checkProductDetails" finished-at="2024-12-17T17:30:58 IST" duration-ms="52877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkProductDetails -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_004_ProductDetailsTest@57a78e3]" started-at="2024-12-17T17:30:58 IST" name="takeScreenshot" finished-at="2024-12-17T17:30:58 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkProductDetails status=SUCCESS method=TS_004_ProductDetailsTest.checkProductDetails()[pri:0, instance:tests.TS_004_ProductDetailsTest@57a78e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_004_ProductDetailsTest -->
      <class name="tests.TS_005_CartFunctionalityTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_005_CartFunctionalityTest@402c4085]" started-at="2024-12-17T17:30:58 IST" name="openBrowser" finished-at="2024-12-17T17:31:13 IST" duration-ms="14186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="validateCartFunctionality()[pri:0, instance:tests.TS_005_CartFunctionalityTest@402c4085]" started-at="2024-12-17T17:31:13 IST" name="validateCartFunctionality" finished-at="2024-12-17T17:31:32 IST" duration-ms="19511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCartFunctionality -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_005_CartFunctionalityTest@402c4085]" started-at="2024-12-17T17:31:32 IST" name="takeScreenshot" finished-at="2024-12-17T17:31:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCartFunctionality status=SUCCESS method=TS_005_CartFunctionalityTest.validateCartFunctionality()[pri:0, instance:tests.TS_005_CartFunctionalityTest@402c4085] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_005_CartFunctionalityTest -->
      <class name="tests.TS_001_SignUpTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_001_SignUpTest@5d0bf09b]" started-at="2024-12-17T17:26:09 IST" name="openBrowser" finished-at="2024-12-17T17:26:47 IST" duration-ms="38665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="SignUpToDemoblaze()[pri:0, instance:tests.TS_001_SignUpTest@5d0bf09b]" started-at="2024-12-17T17:26:47 IST" name="SignUpToDemoblaze" finished-at="2024-12-17T17:27:01 IST" duration-ms="13737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpToDemoblaze -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_001_SignUpTest@5d0bf09b]" started-at="2024-12-17T17:27:01 IST" name="takeScreenshot" finished-at="2024-12-17T17:27:01 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUpToDemoblaze status=SUCCESS method=TS_001_SignUpTest.SignUpToDemoblaze()[pri:0, instance:tests.TS_001_SignUpTest@5d0bf09b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_001_SignUpTest -->
      <class name="tests.TS_003_DashboardTest">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:tests.TS_003_DashboardTest@4681c175]" started-at="2024-12-17T17:27:35 IST" name="openBrowser" finished-at="2024-12-17T17:28:22 IST" duration-ms="46828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="seeWelcomeUserMessage()[pri:0, instance:tests.TS_003_DashboardTest@4681c175]" started-at="2024-12-17T17:28:22 IST" name="seeWelcomeUserMessage" finished-at="2024-12-17T17:28:34 IST" duration-ms="12252" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Wrong password.}
  (Session info: chrome=131.0.6778.140): Wrong password.
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b4363350bf323970da312aaa797317f8, findElement {using=id, value=nameofuser}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.108 (3b014839fbc..., userDataDir: C:\Users\ELCOT\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61195}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61195/devtoo..., se:cdpVersion: 131.0.6778.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b4363350bf323970da312aaa797317f8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Wrong password.}
  (Session info: chrome=131.0.6778.140): Wrong password.
Build info: version: '4.27.0', revision: 'd6e718d134'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b4363350bf323970da312aaa797317f8, findElement {using=id, value=nameofuser}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.140, chrome: {chromedriverVersion: 131.0.6778.108 (3b014839fbc..., userDataDir: C:\Users\ELCOT\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61195}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61195/devtoo..., se:cdpVersion: 131.0.6778.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b4363350bf323970da312aaa797317f8
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:136)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy9.getText(Unknown Source)
at pages.DashboardPage.welcomeMessage(DashboardPage.java:35)
at tests.TS_003_DashboardTest.seeWelcomeUserMessage(TS_003_DashboardTest.java:33)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- seeWelcomeUserMessage -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:tests.TS_003_DashboardTest@4681c175]" started-at="2024-12-17T17:28:34 IST" name="takeScreenshot" finished-at="2024-12-17T17:28:35 IST" duration-ms="1162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=seeWelcomeUserMessage status=FAILURE method=TS_003_DashboardTest.seeWelcomeUserMessage()[pri:0, instance:tests.TS_003_DashboardTest@4681c175] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- tests.TS_003_DashboardTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
